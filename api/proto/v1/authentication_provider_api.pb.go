// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/proto/v1/authentication_provider_api.proto

package dockerregistryproxyv1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// ProvideRequest represents a message for an AuthenticationProvider to return
// credentials for.
type ProvideRequest struct {
	// host represents the host of the image that the docker client is attempting
	// to pull. e.g. docker-proxy.example.org
	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// repository represents the repository of the image that the docker client is
	// attempting to pull. e.g. my-repository
	Repository string `protobuf:"bytes,2,opt,name=repository,proto3" json:"repository,omitempty"`
	// image represents the image that the docker client is attempting to pull.
	// e.g. my-image:latest or my-image@sha256:digest
	Image                string   `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProvideRequest) Reset()         { *m = ProvideRequest{} }
func (m *ProvideRequest) String() string { return proto.CompactTextString(m) }
func (*ProvideRequest) ProtoMessage()    {}
func (*ProvideRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d4b9acd2a45276e, []int{0}
}

func (m *ProvideRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProvideRequest.Unmarshal(m, b)
}
func (m *ProvideRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProvideRequest.Marshal(b, m, deterministic)
}
func (m *ProvideRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProvideRequest.Merge(m, src)
}
func (m *ProvideRequest) XXX_Size() int {
	return xxx_messageInfo_ProvideRequest.Size(m)
}
func (m *ProvideRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProvideRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProvideRequest proto.InternalMessageInfo

func (m *ProvideRequest) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *ProvideRequest) GetRepository() string {
	if m != nil {
		return m.Repository
	}
	return ""
}

func (m *ProvideRequest) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

// ProvideResponse represents the returned credentials.
type ProvideResponse struct {
	// Inlined what we use from github.com/cli/cli/config/types
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Auth     string `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
	// IdentityToken is used to authenticate the user and get
	// an access token for the registry.
	IdentityToken string `protobuf:"bytes,4,opt,name=identity_token,json=identityToken,proto3" json:"identity_token,omitempty"`
	// RegistryToken is a bearer token to be sent to a registry
	RegistryToken        string   `protobuf:"bytes,5,opt,name=registry_token,json=registryToken,proto3" json:"registry_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProvideResponse) Reset()         { *m = ProvideResponse{} }
func (m *ProvideResponse) String() string { return proto.CompactTextString(m) }
func (*ProvideResponse) ProtoMessage()    {}
func (*ProvideResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d4b9acd2a45276e, []int{1}
}

func (m *ProvideResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProvideResponse.Unmarshal(m, b)
}
func (m *ProvideResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProvideResponse.Marshal(b, m, deterministic)
}
func (m *ProvideResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProvideResponse.Merge(m, src)
}
func (m *ProvideResponse) XXX_Size() int {
	return xxx_messageInfo_ProvideResponse.Size(m)
}
func (m *ProvideResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProvideResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProvideResponse proto.InternalMessageInfo

func (m *ProvideResponse) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ProvideResponse) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *ProvideResponse) GetAuth() string {
	if m != nil {
		return m.Auth
	}
	return ""
}

func (m *ProvideResponse) GetIdentityToken() string {
	if m != nil {
		return m.IdentityToken
	}
	return ""
}

func (m *ProvideResponse) GetRegistryToken() string {
	if m != nil {
		return m.RegistryToken
	}
	return ""
}

func init() {
	proto.RegisterType((*ProvideRequest)(nil), "vjftw.dockerregistryproxy.v1.ProvideRequest")
	proto.RegisterType((*ProvideResponse)(nil), "vjftw.dockerregistryproxy.v1.ProvideResponse")
}

func init() {
	proto.RegisterFile("api/proto/v1/authentication_provider_api.proto", fileDescriptor_8d4b9acd2a45276e)
}

var fileDescriptor_8d4b9acd2a45276e = []byte{
	// 339 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0xdb, 0x4a, 0x02, 0x41,
	0x18, 0x66, 0x3d, 0x74, 0x18, 0xc8, 0x60, 0x28, 0xd8, 0x44, 0x44, 0x84, 0xa0, 0x8b, 0x1a, 0xd9,
	0x7a, 0x02, 0xc5, 0x9b, 0xee, 0x16, 0x89, 0x25, 0x44, 0x90, 0xc9, 0x1d, 0x75, 0x12, 0xf7, 0x9f,
	0x66, 0xc6, 0xb5, 0xbd, 0xee, 0x41, 0x82, 0x2e, 0xeb, 0x4d, 0x7a, 0xaa, 0x98, 0xd9, 0x51, 0x12,
	0x36, 0xe9, 0x6e, 0xbe, 0xc3, 0x7f, 0xfa, 0x76, 0x11, 0xa1, 0x82, 0x77, 0x84, 0x04, 0x0d, 0x9d,
	0x34, 0xe8, 0xd0, 0x95, 0x9e, 0xb3, 0x44, 0xf3, 0x09, 0xd5, 0x1c, 0x92, 0xb1, 0x90, 0x90, 0xf2,
	0x98, 0xc9, 0x31, 0x15, 0x9c, 0x58, 0x13, 0x6e, 0xa4, 0xcf, 0x53, 0xbd, 0x26, 0x31, 0x4c, 0x16,
	0x4c, 0x4a, 0x36, 0xe3, 0x4a, 0xcb, 0x4c, 0x48, 0x78, 0xcd, 0x48, 0x1a, 0xb4, 0x87, 0xa8, 0x16,
	0xe6, 0x35, 0x03, 0xf6, 0xb2, 0x62, 0x4a, 0x63, 0x8c, 0x2a, 0x73, 0x50, 0xda, 0xf7, 0x5a, 0xde,
	0xd5, 0xf1, 0xc0, 0xbe, 0x71, 0x13, 0x21, 0xc9, 0x04, 0x28, 0xae, 0x41, 0x66, 0x7e, 0xc9, 0x2a,
	0xbf, 0x18, 0x7c, 0x86, 0xaa, 0x7c, 0x49, 0x67, 0xcc, 0x2f, 0x5b, 0x29, 0x07, 0xed, 0x2f, 0x0f,
	0x9d, 0x6e, 0x9b, 0x2b, 0x01, 0x89, 0x62, 0xb8, 0x8e, 0x8e, 0x56, 0x8a, 0xc9, 0x84, 0x2e, 0x99,
	0x9b, 0xb0, 0xc5, 0x46, 0x13, 0x54, 0xa9, 0x35, 0xc8, 0xd8, 0xcd, 0xd8, 0x62, 0xb3, 0x95, 0x39,
	0xd5, 0x0d, 0xb0, 0x6f, 0x7c, 0x89, 0x6a, 0x3c, 0x36, 0xc7, 0xeb, 0x6c, 0xac, 0x61, 0xc1, 0x12,
	0xbf, 0x62, 0xd5, 0x93, 0x0d, 0xfb, 0x60, 0x48, 0x63, 0xdb, 0x9c, 0xed, 0x6c, 0xd5, 0xdc, 0xb6,
	0x61, 0xad, 0xed, 0xf6, 0xcd, 0x43, 0x17, 0xdd, 0x9d, 0x34, 0xdd, 0xee, 0xb2, 0x1b, 0xde, 0xe3,
	0x29, 0x3a, 0x74, 0x10, 0x5f, 0x93, 0x7d, 0x89, 0x92, 0xdd, 0x38, 0xeb, 0x37, 0xff, 0x74, 0xe7,
	0xf9, 0xf4, 0xde, 0x3d, 0xd4, 0x9a, 0xc0, 0x72, 0x6f, 0x51, 0xaf, 0xf9, 0xc7, 0x9e, 0x82, 0x87,
	0xe6, 0x93, 0x87, 0xde, 0xf0, 0xbc, 0xa0, 0x32, 0x0d, 0x3e, 0x4a, 0xe5, 0xa8, 0xff, 0xf8, 0x59,
	0x6a, 0x44, 0xb6, 0x7b, 0xbf, 0xa0, 0x7b, 0x14, 0x7c, 0x3b, 0x79, 0x54, 0x20, 0x8f, 0xa2, 0xe0,
	0xe9, 0xc0, 0xfe, 0x56, 0x77, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x7a, 0x84, 0x69, 0xce, 0x88,
	0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AuthenticationProviderAPIClient is the client API for AuthenticationProviderAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthenticationProviderAPIClient interface {
	// Provide returns credentials for the given ProvideRequest.
	Provide(ctx context.Context, in *ProvideRequest, opts ...grpc.CallOption) (*ProvideResponse, error)
}

type authenticationProviderAPIClient struct {
	cc grpc.ClientConnInterface
}

func NewAuthenticationProviderAPIClient(cc grpc.ClientConnInterface) AuthenticationProviderAPIClient {
	return &authenticationProviderAPIClient{cc}
}

func (c *authenticationProviderAPIClient) Provide(ctx context.Context, in *ProvideRequest, opts ...grpc.CallOption) (*ProvideResponse, error) {
	out := new(ProvideResponse)
	err := c.cc.Invoke(ctx, "/vjftw.dockerregistryproxy.v1.AuthenticationProviderAPI/Provide", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthenticationProviderAPIServer is the server API for AuthenticationProviderAPI service.
type AuthenticationProviderAPIServer interface {
	// Provide returns credentials for the given ProvideRequest.
	Provide(context.Context, *ProvideRequest) (*ProvideResponse, error)
}

// UnimplementedAuthenticationProviderAPIServer can be embedded to have forward compatible implementations.
type UnimplementedAuthenticationProviderAPIServer struct {
}

func (*UnimplementedAuthenticationProviderAPIServer) Provide(ctx context.Context, req *ProvideRequest) (*ProvideResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Provide not implemented")
}

func RegisterAuthenticationProviderAPIServer(s *grpc.Server, srv AuthenticationProviderAPIServer) {
	s.RegisterService(&_AuthenticationProviderAPI_serviceDesc, srv)
}

func _AuthenticationProviderAPI_Provide_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProvideRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationProviderAPIServer).Provide(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vjftw.dockerregistryproxy.v1.AuthenticationProviderAPI/Provide",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationProviderAPIServer).Provide(ctx, req.(*ProvideRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthenticationProviderAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "vjftw.dockerregistryproxy.v1.AuthenticationProviderAPI",
	HandlerType: (*AuthenticationProviderAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Provide",
			Handler:    _AuthenticationProviderAPI_Provide_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/proto/v1/authentication_provider_api.proto",
}
